<experiment>
	<process algorithm-type="net.sf.jclec.algorithm.classic.SGE">
		<population-size>3000</population-size>
		<max-of-generations>500</max-of-generations>
		<rand-gen-factory multi="true">
			<rand-gen-factory type="net.sf.jclec.util.random.RanecuFactory" seed="123456789"/>
			<rand-gen-factory type="net.sf.jclec.util.random.RanecuFactory" seed="234567891"/>
			<rand-gen-factory type="net.sf.jclec.util.random.RanecuFactory" seed="345678912"/>
			<rand-gen-factory type="net.sf.jclec.util.random.RanecuFactory" seed="456789123"/>
			<rand-gen-factory type="net.sf.jclec.util.random.RanecuFactory" seed="567891234"/>
			<rand-gen-factory type="net.sf.jclec.util.random.RanecuFactory" seed="678912345"/>
			<rand-gen-factory type="net.sf.jclec.util.random.RanecuFactory" seed="789123456"/>
			<rand-gen-factory type="net.sf.jclec.util.random.RanecuFactory" seed="891234567"/>
			<rand-gen-factory type="net.sf.jclec.util.random.RanecuFactory" seed="912345678"/>
			<rand-gen-factory type="net.sf.jclec.util.random.RanecuFactory" seed="123571113"/>
		</rand-gen-factory>
		<species type="net.sf.jclec.exprtree.ExprTreeIndividualSpecies" number-of-trees="1">
			<expression-tree>
				<min-tree-size>3</min-tree-size>
				<max-tree-size>20</max-tree-size>
				<root-type>java.lang.Double</root-type>
				<terminals>
					<terminal class="symreg.X"/>
					<terminal class="symreg.Y"/>
				</terminals>
				<functions>
					<function class="symreg.Add"/>
					<function class="symreg.Sub"/>
					<function class="symreg.Mul"/>
					<function class="symreg.AQ"/>
					<function class="symreg.Cos"/>
					<function class="symreg.Sin"/>
					<function class="symreg.Log"/>
				</functions>
			</expression-tree>
		</species>
		<evaluator type="symreg.SymregEvaluatorDerivativeRmsd_xy"> 
<xvalues>0.250,0.642,0.611,0.162,-0.105,0.421,-0.600,0.311,0.275,0.681,-0.932,-0.735,0.617,-0.634,0.134,0.011,0.985,-0.121,0.070,-0.455,0.211,-0.947,-0.151,0.364,-0.688,0.947,0.560,-0.779,-0.048,-0.387,0.540,0.064,0.170,-0.108,-0.643,-0.640,0.338,-0.041,-0.839,0.301,0.523,-0.254,0.086,-0.910,-0.865,0.575,0.032,0.812,-0.259,0.356,0.596,0.373,0.263,0.741,-0.714,-0.786,0.203,-0.531,-0.049,-0.495,-0.173,-0.597,-0.681,-0.906,-0.031,0.818,-0.574,-0.912,0.362,0.294,-0.195,-0.834,-0.631,0.159,-0.555,0.639,0.151,0.725,-0.565,-0.707,0.660,-0.111,0.177,0.267,0.750,0.594,-0.913,-0.866,0.863,0.215,0.192,0.936,0.471,0.405,-0.242,-0.521,-0.401,0.856,-0.487,-0.277,0.711</xvalues>
<yvalues>-0.908,0.003,0.790,-0.767,0.990,0.058,-0.874,-0.619,-0.454,-0.319,0.470,0.266,0.426,0.355,-0.382,-0.723,0.796,0.025,-0.960,-0.024,-0.548,0.973,-0.516,-0.983,0.152,0.402,0.372,0.092,0.368,0.578,-0.085,-0.338,-0.092,0.057,-0.143,-0.302,-0.660,-0.842,0.729,-0.968,0.026,0.747,-0.048,-0.383,0.963,-0.442,-0.404,-0.746,0.892,0.774,0.006,-0.777,-0.238,0.200,0.869,-0.651,-0.116,0.299,-0.381,0.601,0.761,-0.547,0.858,-0.893,-0.655,0.835,0.893,-0.551,-0.358,0.310,0.396,0.336,-0.531,-0.520,-0.703,-0.214,0.047,-0.155,-0.564,-0.171,0.636,-0.657,0.056,0.222,-0.700,-0.872,-0.045,-0.952,-0.805,-0.169,0.209,-0.277,0.792,-0.025,-0.826,-0.023,0.466,0.722,-0.854,-0.003,-0.450</yvalues>
<zvalues>0.30446695,1.19759149,0.80757356,0.23225963,-0.11501326,0.81597228,-0.72473452,0.49846658,0.48807849,1.19561631,-1.43152702,-1.29400536,1.05375981,-1.11087133,0.24793925,0.01649580,1.16586523,-0.24133448,0.08022724,-0.87867151,0.35753893,-0.91364840,-0.26168244,0.39484096,-1.25534417,1.49392195,0.98970851,-1.39919396,-0.08953828,-0.63220811,1.02455959,0.12067531,0.33693375,-0.21523023,-1.18695775,-1.14033698,0.52392430,-0.05459442,-1.10977439,0.33617237,0.99862508,-0.36874010,0.17159020,-1.46460475,-0.86926187,0.98314233,0.05883770,1.06587022,-0.32160579,0.49847873,1.12265304,0.51966448,0.50530028,1.32314093,-0.84554544,-1.12565293,0.40050746,-0.96785577,-0.09093634,-0.78358424,-0.24930683,-0.96027577,-0.82341730,-0.98707398,-0.04916110,0.97962400,-0.68100083,-1.34740555,0.66338466,0.55193997,-0.35754239,-1.39842001,-1.01743337,0.27480518,-0.80401651,1.16557775,0.30052143,1.31037093,-0.90498508,-1.28016409,0.98647818,-0.17542507,0.35160245,0.51472813,1.04269216,0.72008090,-1.58108065,-0.88370643,1.05324693,0.42061593,0.37334003,1.54899740,0.63748787,0.78779127,-0.32487311,-0.99523212,-0.69743678,1.13357340,-0.61489598,-0.54694002,1.17524880</zvalues>
</evaluator>
		<provider type="net.sf.jclec.exprtree.ExprTreeCreator"/>
		<parents-selector type="net.sf.jclec.selector.TournamentSelector" tournament-size="2"/>
		<recombinator type="net.sf.jclec.exprtree.ExprTreeRecombinator" rec-prob="0.8">
			<base-op type="net.sf.jclec.exprtree.rec.SubtreeCrossover" />
		</recombinator>
		<mutator type="net.sf.jclec.exprtree.ExprTreeMutator" mut-prob="0.1">
			<base-op type="net.sf.jclec.exprtree.mut.SubtreeMutator" />
		</mutator>
		<listener type="symreg.MyPopulationReporter">
			<report-title>SymRegRmsd</report-title>
			<report-frequency>1</report-frequency>
			<report-on-console>false</report-on-console>
			<report-on-file>true</report-on-file>
			<save-complete-population>false</save-complete-population>
		</listener>
	</process>
</experiment>
